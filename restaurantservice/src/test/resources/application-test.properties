spring.application.name=RestaurantService

# --- H2 Console ---
# Enables the H2 database console, a web-based client to view the database.
spring.h2.console.enabled=true
# Sets the path to access the H2 console. You can access it at http://localhost:8080/h2-console
spring.h2.console.path=/h2-console

# --- Datasource Connection ---
# The JDBC URL for the H2 in-memory database. 'restaurantdb' is the name of the database.
spring.datasource.url=jdbc:h2:mem:restaurant_test_db
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# ===================================================================
# JPA & HIBERNATE CONFIGURATION
# ===================================================================

# --- JPA Settings ---
# Specifies the Hibernate dialect for H2, allowing Hibernate to generate optimized SQL.
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# --- Schema Generation ---
# Automatically updates the database schema based on your @Entity classes when the application starts.
# Use 'create-drop' for tests (schema is dropped when the session factory closes).
# Use 'update' for development.
# Use 'validate' or 'none' for production.
spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.show-sql=true
